import numpy
from pyscf.pbc import gto
from pyscf.pbc import dft
from pyscf.pbc.dft import multigrid as cpu_multi_grid

from gpu4pyscf.pbc import dft as gpu_pbcdft
from gpu4pyscf.pbc.dft import multi_grid

cell=gto.Cell()

import cupy.cuda
cupy.cuda.set_allocator(cupy.cuda.MemoryPool(cupy.cuda.malloc_managed).malloc)
boxlen=15
cell.a=numpy.array([[boxlen,0.0,0.0],[0.0,boxlen,0.0],[0.0,0.0,boxlen]])
cell.atom="""
 O   1.613159999999999927e+00 6.554399000000000086e+00 4.322530000000000427e+00
 H   1.428539999999999921e+00 5.878300000000000303e+00 5.021608999999999767e+00
 H   2.016700000000000159e+00 5.965879000000000154e+00 3.618549999999999933e+00
 O   3.162049999999999805e+00 8.750220000000000553e+00 4.021650000000000169e+00
 H   2.443400000000000016e+00 8.029849999999999710e+00 4.224420000000000286e+00
 H   3.217699999999999783e+00 9.223639999999999617e+00 4.884699999999999598e+00
 O   3.699879999999999836e+00 2.308800000000000019e-01 1.688099999999999934e+00
 H   3.378330000000000055e+00 -1.526800000000010094e-01 2.487979999999999858e+00
 H   3.611790000000000056e+00 -4.963400000000008916e-01 9.904600000000000071e-01
 O   2.761179999999999968e+00 4.815249999999999808e+00 2.635450000000000070e+00
 H   3.601900000000000102e+00 4.658520000000000216e+00 3.044760000000000133e+00
 H   2.664039999999999964e+00 4.084109999999999907e+00 1.901380000000000070e+00
 O   2.735829999999999984e+00 2.768990000000000062e+00 8.625249999999999861e-01
 H   3.225159999999999805e+00 2.987849999999999895e+00 2.081399999999999917e-02
 H   3.046959999999999891e+00 1.855429999999999913e+00 1.160919999999999952e+00
 O   6.286438999999999666e+00 2.290369999999999795e+00 8.821559999999999846e+00
 H   5.968110000000000248e+00 2.744099999999999984e+00 8.033289999999999154e+00
 H   6.777009999999999756e+00 3.062409999999999854e+00 9.332560000000000855e+00
 O   7.828409999999999869e+00 1.507100000000000106e-01 8.392839999999999634e+00
 H   7.342240000000000322e+00 9.850069999999999659e-01 8.599750000000000227e+00
 H   8.293810000000000571e+00 4.392679999999999918e-01 7.536319999999999908e+00
 O   8.023160000000000736e+00 4.406859999999999999e+00 3.091870000000000118e+00
 H   8.394849000000000672e+00 5.309750000000000192e+00 3.195619999999999905e+00
 H   8.640340999999999383e+00 3.670160000000000089e+00 3.449829999999999952e+00
 O   8.802900000000000169e-01 8.039229999999999876e+00 9.213679000000000840e+00
 H   8.415660000000000363e-01 7.193209999999999660e+00 8.674718999999999625e+00
 H   2.196639999999999704e-01 7.986270000000000202e+00 1.000949899999999992e+01
 O   9.064199999999999591e+00 6.924749000000000265e+00 3.520599999999999952e+00
 H   8.465909999999999158e+00 7.412720000000000198e+00 4.157799999999999940e+00
 H   9.988750000000001350e+00 6.725628999999999635e+00 3.939830000000000165e+00
 O   8.948019999999999641e+00 6.313640000000000363e-01 6.152389999999999581e+00
 H   9.044129999999999114e+00 1.401569999999999983e+00 5.500958999999999932e+00
 H   8.385590000000000543e+00 -1.140000000000807034e-03 5.602960000000000385e+00
 O   3.534730000000000150e+00 4.748949999999999783e+00 9.054114000000000217e+00
 H   4.178390000000000271e+00 4.482149999999999856e+00 8.334350999999999843e+00
 H   4.127229999999999954e+00 5.240140000000000242e+00 9.672067999999999444e+00
 O   3.358920000000000239e-01 2.494530000000000136e+00 9.636480000000000601e+00
 H   1.202860000000000040e+00 2.586090000000000000e+00 1.015203499999999970e+01
 H   5.128740000000000521e-01 1.707840000000000025e+00 8.991369999999999862e+00
 O   5.396978999999999971e+00 9.042310000000000514e+00 7.849829999999999863e+00
 H   4.806860000000000355e+00 9.104729999999999990e+00 8.584160000000000679e+00
 H   6.234930000000000305e+00 9.470853999999999218e+00 8.027789999999999537e+00
 O   5.312549999999999883e+00 7.267399000000000164e+00 3.871480000000000032e+00
 H   5.523480000000000167e+00 6.673678999999999917e+00 4.583090000000000330e+00
 H   4.439589999999999925e+00 7.688519000000000325e+00 4.027180000000000426e+00
 O   3.640109999999999957e+00 2.769089999999999829e+00 5.298849999999999838e+00
 H   4.295509000000000022e+00 2.899719999999999853e+00 4.492829000000000406e+00
 H   3.570539999999999825e+00 1.784980000000000011e+00 5.447809999999999597e+00
"""

cell.basis = 'gth-tzv2p'
cell.ke_cutoff = 200  # kinetic energy cutoff in a.u.
# cell.max_memory = 8000 # in MB
cell.precision = 1e-6 # integral precision
cell.pseudo = 'gth-pade'
cell.verbose = 6
cell.use_loose_rcut = True # integral screening based on shell radii
cell.use_particle_mesh_ewald = True # use particle mesh ewald for nuclear repulsion
cell.build()

gpu_mf = gpu_pbcdft.RKS(cell)
gpu_mf.xc = "LDA"
gpu_mf.init_guess = 'atom' # atom guess is fast
gpu_mf.max_cycle = 10
gpu_mf = multi_grid.fftdf(gpu_mf)
gpu_mf.with_df.ngrids = 4
gpu_mf.kernel()

mf=dft.RKS(cell)
mf.xc = "LDA"
# mf.xc = "PBE,PBE"
mf.max_cycle = 10
mf.init_guess = 'atom' # atom guess is fast
mf.with_df = cpu_multi_grid.MultiGridFFTDF2(cell)
mf.with_df.ngrids = 4 # number of sets of grid points
mf.kernel()

